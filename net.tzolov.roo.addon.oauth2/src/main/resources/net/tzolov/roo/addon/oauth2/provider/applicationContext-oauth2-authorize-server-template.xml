<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd 
    	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
    	
	<!-- 
		AUTHORIZATION SERVER (Authorize and Token Endpoints 
	-->    
	<http name="tokenHttpChain" pattern="/oauth/token" create-session="never"	authentication-manager-ref="clientAuthenticationManager">
		<intercept-url pattern="/oauth/token" access="IS_AUTHENTICATED_FULLY" />
		<anonymous enabled="false" />
		<http-basic />
	</http>	
		
	<http  access-denied-page="/login" access-decision-manager-ref="accessDecisionManager" authentication-manager-ref="userAuthenticationManager">
		<!-- This needs to be anonymous so that the auth endpoint can handle oauth errors itself -->
		<intercept-url pattern="/oauth/authorize" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<intercept-url pattern="/oauth/**" access="ROLE_USER" />
		<intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY,DENY_OAUTH" />

		<form-login authentication-failure-url="/login?login_error=t" default-target-url="/index.jsp" login-page="/login" login-processing-url="/resources/j_spring_security_check" />		
		<logout logout-success-url="/index.jsp" logout-url="/resources/j_spring_security_logout" />		
		<anonymous />
	</http>	
	
	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased" xmlns="http://www.springframework.org/schema/beans">
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter" />
				<bean class="org.springframework.security.access.vote.RoleVoter" />
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</list>
		</constructor-arg>
	</bean>
	
	<beans:bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices" p:supportRefreshToken="true" p:tokenStore-ref="tokenStore"/>
    <beans:bean id="tokenStore" c:dataSource-ref="dataSource" class="org.springframework.security.oauth2.provider.token.JdbcTokenStore"/>
	
	<!-- Resource owners credentials-->
	<authentication-manager alias="userAuthenticationManager">
		<authentication-provider>
			<user-service>
				<user name="resourceOwner" password="resourceOwner" authorities="ROLE_USER" />
				<user name="resourceOwner2" password="resourceOwner2" authorities="ROLE_USER" />
			</user-service>
		</authentication-provider>
	</authentication-manager>
	
	<!-- Client applications credentials-->
	<authentication-manager id="clientAuthenticationManager">
		<authentication-provider user-service-ref="clientDetailsUserService" />
	</authentication-manager>

	<beans:bean id="clientDetailsUserService" class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
		<beans:constructor-arg ref="clientDetails" />
	</beans:bean>

	<oauth:client-details-service id="clientDetails" >	
		<oauth:client client-id="my-client-id" authorized-grant-types="authorization_code,client_credentials,implicit" authorities="ROLE_CLIENT,ROLE_USER" scope="read,write" secret="secret" />
		<oauth:client client-id="my-client-id-2" authorized-grant-types="authorization_code,client_credentials,implicit" authorities="ROLE_CLIENT,ROLE_USER" scope="read,write" secret="secret" />			
	</oauth:client-details-service>
		
	<!-- Expression Handler Configuration -->
	<global-method-security pre-post-annotations="enabled" proxy-target-class="true">
		<expression-handler ref="oauthExpressionHandler" />
	</global-method-security>
	<oauth:expression-handler id="oauthExpressionHandler" />
</beans:beans>